{"version":3,"sources":["assets/golfBall.svg","App.js","reportWebVitals.js","index.js"],"names":["require","config","App","state","temp","humidity","windSpeed","weatherDescription","city","zip","myLat","myLon","placesToGolf","pickedGolfLat","pickedGolfLon","getForecast","e","preventDefault","weatherAPI","axios","get","then","res","setState","data","current","weather","description","wind_speed","catch","error","console","log","alert","reverseGeocoding","results","address_components","long_name","short_name","headers","Authorization","process","params","term","categories","limit","radius","sort_by","open_now","latitude","longitude","businesses","navigator","geolocation","getCurrentPosition","pos","coordinates","coords","err","warn","code","message","enableHighAccuracy","timeout","maximumAge","className","src","logo","alt","Button","variant","onClick","this","filter","place","map","filteredPlaces","name","display_phone","location","display_address","rating","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b38d7b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/golfBall.4daa5f5c.svg\";","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport logo from \"./assets/golfBall.svg\";\nimport \"./App.css\";\nrequire(\"dotenv\").config();\n\nclass App extends Component {\n  state = {\n    temp: \"\",\n    humidity: \"\",\n    windSpeed: \"\",\n    weatherDescription: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    myLat: \"\",\n    myLon: \"\",\n    placesToGolf: [],\n    pickedGolfLat: \"\",\n    pickedGolfLon: \"\",\n  };\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        let coordinates = pos.coords;\n        this.setState({ myLat: coordinates.latitude });\n        this.setState({ myLon: coordinates.longitude });\n      },\n      (err) => {\n        console.warn(`Error(${err.code}): ${err.message}`);\n        alert(\"Something Went Wrong 1 \" + err)\n        alert(\"Something Went Wrong 2 \" + err.code)\n        alert(\"Something Went Wrong 3 \" + err.message)\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 5000,\n        maximumAge: 0,\n      }\n    );\n  }\n\n  getForecast = (e) => {\n    e.preventDefault();\n    if (this.state.myLat !== \"undefined\") {\n      const weatherAPI =\n        // Openweather API\n        \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n        this.state.myLat +\n        \"&lon=\" +\n        this.state.myLon +\n        \"&units=imperial&exclude=minutely,alerts&appid=\" +\n        process.env.REACT_APP_WKEY;\n      axios\n        .get(weatherAPI)\n        .then((res) => {\n          this.setState({\n            temp: res.data.current.temp,\n            humidity: res.data.current.humidity,\n            weatherDescription: res.data.current.weather[0].description,\n            windSpeed: res.data.current.wind_speed,\n          });\n          return axios.get(weatherAPI);\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\"Something Went Wrong4 \" + error)\n        });\n      // Reverse Geocoding API\n      const reverseGeocoding =\n        \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" +\n        this.state.myLat +\n        \",\" +\n        this.state.myLon +\n        \"&key=\" +\n        process.env.REACT_APP_GKEY;\n      axios\n        .get(reverseGeocoding)\n        .then((res) => {\n          this.setState({\n            city: res.data.results[0].address_components[2].long_name,\n            state: res.data.results[0].address_components[4].short_name,\n            zip: res.data.results[0].address_components[6].long_name,\n          });\n          return axios.get(reverseGeocoding);\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\"Something Went Wrong5 \" + error)\n        });\n    } else {\n      console.log(\"Something Went Wrong!!!\");\n      alert(\"Something Went Wrong6\")\n    }\n    // Yelp API\n    const yelpAPI = axios.get(\n      `${\"https://corsanywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search`,\n      {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_YKEY}`,\n        },\n        params: {\n          term: \"golf\",\n          categories: \"golf\",\n          limit: 50,\n          radius: 40000,\n          sort_by: \"distance\",\n          open_now: true,\n          latitude: this.state.myLat,\n          longitude: this.state.myLon,\n        },\n      }\n    );\n    return yelpAPI\n      .then((res) => {\n        this.setState({ placesToGolf: res.data.businesses });\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"Something Went Wrong7 \"+ error)\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <br />\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <br />\n            <Button\n              className=\"golfButton\"\n              variant=\"success\"\n              onClick={this.getForecast}\n              // onTouch={this.getForecast}\n            >\n              <h2 className=\"foreButton\">FORE-CAST</h2>\n            </Button>\n            <br />\n            <section className=\"section\">\n              <h3 className=\"section\">Temp: {this.state.temp} Fehrenheit</h3>\n              <h5 className=\"section\">Humidity: {this.state.humidity}%</h5>\n              <h5 className=\"section\">\n                Wind Speed: {this.state.windSpeed} mph\n              </h5>\n              <h5 className=\"section\">\n                Forecast: {this.state.weatherDescription}\n              </h5>\n              <h3 className=\"section\">\n                Your Location:\n                {\" \" +\n                  this.state.city +\n                  \" \" +\n                  this.state.state +\n                  \" \" +\n                  this.state.zip}\n              </h3>\n              <hr className=\"hr\" />\n              <h3>Golf Results Closest To Furthest From You:</h3>\n              <hr className=\"hr\" />\n              <div>\n                {this.state.placesToGolf\n                  .filter((place) => place)\n                  .map((filteredPlaces) => (\n                    <header key={filteredPlaces.id}>\n                      <h2 className=\"section\">{filteredPlaces.name}</h2>\n                      <h4 className=\"section\">\n                        {filteredPlaces.display_phone}\n                      </h4>\n                      <h4 className=\"section\">\n                        {filteredPlaces.location.display_address[0]}\n                      </h4>\n                      <h4 className=\"section\">\n                        {filteredPlaces.location.display_address[1]}\n                      </h4>\n                      <h4 className=\"section\">\n                        {filteredPlaces.location.display_address[2]}\n                      </h4>\n                      <h4 className=\"section\">\n                        Rating: {filteredPlaces.rating}/5\n                      </h4>\n                      <hr className=\"hr\" />\n                    </header>\n                  ))}\n              </div>\n            </section>\n          </header>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}